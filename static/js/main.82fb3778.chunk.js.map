{"version":3,"sources":["redux/reducer.js","components/Auth/Register.js","components/Auth/Login.js","components/Dash/Dash.js","components/UserPosts/UserPosts.js","components/Post/Comment.js","components/Post/Post.js","components/CreatePost/CreatePost.js","media/copyicon.png","media/trashicon.png","components/Edit/Edit.js","components/ForgotPassword/ForgotPassword.js","components/Reset/Reset.js","routes.js","components/Header/Header.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["initialState","user_id","GET_USER","LOGOUT_USER","getUser","type","payload","logoutUser","Register","handleEmail","e","setState","email","target","value","handleUsername","username","handlePassword","password","registerUser","a","preventDefault","state","axios","post","user","props","data","history","push","alert","response","request","goToLogin","className","name","this","placeholder","onChange","onClick","alt","src","Component","connect","Login","loginUser","goToRegister","to","Dash","getAllPosts","get","posts","console","log","mappedPosts","map","index","content","style","textDecoration","color","post_id","UserPosts","getUserPosts","userPosts","myPosts","Comment","comment","Post","componentDidMount","getUserPost","getComments","match","params","then","res","catch","err","comments","addComment","setAdd","add","handleComment","mappedComments","comment_id","useState","setContent","useHistory","addPost","Edit","getPost","input","copyCodeToClipboard","document","getElementById","select","execCommand","changeHandler","handleCancel","handleSave","put","updatedPost","handleDelete","delete","handleCommentDelete","toggleDelete","id","readOnly","copyicon","trashicon","ForgotPassword","sendLink","toggle","Reset","resetPassword","resetid","updateduser","newuser","toggleLogin","exact","path","component","CreatePost","dispatch","useDispatch","pic","setPic","isUploading","setUploading","show","setShow","del","setDelete","logout","getMe","profile_pic","getPic","useEffect","uploadFile","file","signedRequest","url","options","headers","deleteProfilePic","status","stack","useDropzone","accept","multiple","onDrop","fileName","randomString","replace","getSignedReq","getRootProps","getInputProps","deleteUser","NavDropdown","title","onMouseEnter","onMouseLeave","Item","App","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","action","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.82fb3778.chunk.js","sourcesContent":["const initialState = {\r\n    \r\n    user_id: ''\r\n}\r\n//Action Types\r\nconst GET_USER = \"GET_USER\" //Using in the Register page\r\nconst LOGOUT_USER = \"LOGOUT_USER\"\r\n\r\nexport const getUser = (user_id) => {\r\n    return {\r\n        type: GET_USER,\r\n        payload: user_id\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return {\r\n        type: LOGOUT_USER, \r\n        payload: initialState\r\n    }\r\n}\r\n\r\nexport default function reducer(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user_id: action.payload\r\n            }\r\n        case LOGOUT_USER: \r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {getUser} from '../../redux/reducer'\r\nimport './Register.css'\r\n\r\n\r\nclass Register extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            email: '',\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n    //Setting state\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value})\r\n    }\r\n    \r\n    handleUsername = (e) => {\r\n        this.setState({   username: e.target.value})\r\n    }\r\n\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value})\r\n    }\r\n\r\n    registerUser = async (e) => {\r\n        e.preventDefault()\r\n        const {email, username, password} =this.state;\r\n        try {\r\n            const user = await axios.post('auth/register', {email, username, password})\r\n            this.props.getUser(user.data.user_id)\r\n            // await axios.post('/email', {email: email})// nodemailer request\r\n            this.props.history.push('/dash')\r\n        }catch(err){\r\n        alert(err.response.request.response)\r\n        }\r\n    }\r\n    goToLogin = async (e) => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='register'>\r\n                <form className='form'>\r\n                \r\n                    <input className='input'\r\n                        name= 'Email'\r\n                        value= {this.email}\r\n                        placeholder='Email'\r\n                        onChange={this.handleEmail}\r\n                        />\r\n                    <input className='input'\r\n                        name='username'\r\n                        value={this.username}\r\n                        placeholder='Username'\r\n                        onChange={this.handleUsername}\r\n                        />\r\n                    <input className='input'\r\n                        name='password'\r\n                        type ='password'\r\n                        value={this.password}\r\n                        placeholder='Enter Password'\r\n                        onChange={this.handlePassword}\r\n                        />\r\n                        <button onClick={this.registerUser} className='registerButton'>Register</button>\r\n                        \r\n                        \r\n                </form>\r\n                <div className='space'>\r\n            \r\n            <img className='authLogo' alt='logo' src='https://cdn.discordapp.com/attachments/789196106965319750/794260091326824499/writersblocklogo.png'></img>\r\n            <button onClick={this.goToLogin} className='toLogin'>Already have an account?</button>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, {getUser})(Register)","import axios from 'axios'\r\nimport React, {Component} from 'react'\r\nimport {getUser} from '../../redux/reducer'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport './Login.css'\r\n\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            \r\n        }\r\n    }\r\n\r\n    handleUsername = (e) => {\r\n        this.setState({   username: e.target.value})\r\n    }\r\n\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value})\r\n    }\r\n\r\n    loginUser = async (e) => {\r\n        e.preventDefault()\r\n        const {username, password} = this.state\r\n        try {\r\n            const user = await axios.post('/auth/login', {username, password})\r\n            this.props.getUser(user.data.user_id)\r\n            this.props.history.push('/dash')\r\n        }catch(err){\r\n            alert(err.response.request.response)\r\n        }    \r\n    }\r\n    \r\n    goToRegister = async () => {\r\n        this.props.history.push('/register')\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className = 'login'>\r\n            \r\n            <form className ='form'>\r\n            \r\n            <input className='input'\r\n                name='username'\r\n                value={this.username}\r\n                placeholder='Username'\r\n                onChange={this.handleUsername}\r\n                />\r\n            <input className='input'\r\n                name='password'\r\n                type ='password'\r\n                value={this.password}\r\n                placeholder='Enter Password'\r\n                onChange={this.handlePassword}\r\n                />\r\n\r\n            <Link to='/forgotpassword' className='forgotpasswordlink'>Forgot Password?</Link>\r\n            <button onClick={this.loginUser} className='loginButton'>Login</button>\r\n            \r\n            </form>\r\n            <div className='space'>\r\n            \r\n            <img className='authLogo' alt='logo' src='https://cdn.discordapp.com/attachments/789196106965319750/794260091326824499/writersblocklogo.png'></img>\r\n            <button onClick={this.goToRegister} className='toRegister'>Need an account?</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {getUser})(Login)","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport './Dash.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Dash extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllPosts()\r\n    }\r\n\r\n    //# The function for getting all posts\r\n    getAllPosts = async () => {\r\n        try{\r\n            const posts = await axios.get('/dash/posts')\r\n            this.setState({\r\n                posts: posts.data\r\n            })\r\n        } catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const mappedPosts = this.state.posts.map((post, index) => {\r\n            return(\r\n                \r\n                <div className='dash-background' key={index} >\r\n                <div className='container' >\r\n                    <div className='post-container'>\r\n                        <h5>{post.content}</h5>\r\n                    </div>\r\n                    <div className='username'>\r\n                        <div className='link-box'>\r\n                        <Link style={{textDecoration: \"none\", color: \"white\"}} to={post.user_id === this.props.user_id ? `/edit/${post.post_id}` : `/post/${post.post_id}`}>Go To Post</Link>\r\n                    </div>\r\n                        <h3> - {post.username} </h3>\r\n                    </div>\r\n                        <hr className='seperating-line'></hr>\r\n                        <br></br>\r\n                    </div>\r\n                </div>\r\n                \r\n            )\r\n        })\r\n        return(\r\n            <div className='push'>\r\n            <div>{mappedPosts}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dash)","import './UserPosts.css';\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios';\r\n\r\n// this component gets and displays all of the users posts based on \r\n// the userid on redux state. each displayed post is a link to \r\n// that single posts page. where you can see the comments and edit/delte the post\r\nclass UserPosts extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            myPosts: []\r\n        }\r\n    }\r\n\r\n    //gets all the users posts on mount\r\n    componentDidMount(){\r\n        this.getUserPosts();\r\n    }\r\n\r\n    //gets all posts\r\n    getUserPosts = async () => {\r\n        //axios request to get posts for user id from redux\r\n        const userPosts = await axios.get(`/api/myposts`);\r\n        this.setState({\r\n            myPosts: userPosts.data\r\n        })\r\n    }\r\n\r\n    //maps over my posts from state and displays each one of them. each post is a link\r\n    render(){\r\n        const mappedPosts = this.state.myPosts.map((post, index) => {\r\n            return(\r\n                <div key={index}>\r\n                    <Link key={index} to={`/post/${post.post_id}`} className=\"myPostLink\">\r\n                        <div className=\"userPost\">\r\n                            <p>{post.content}</p>\r\n                        </div>\r\n                    </Link>\r\n\r\n                        <div className=\"userPostButtons\">\r\n                            <h1> </h1> \r\n                            <Link to={`/edit/${post.post_id}`}><button>Revise</button></Link>\r\n                        </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className='push'>\r\n        <div className='userPosts'>\r\n            {!this.state.myPosts[0] ? \r\n                <div className=\"noPosts\">\r\n                    <h1>You don't have any posts</h1>\r\n                    <Link  to=\"/createpost\"><button className=\"startWriting\">{'Start Writing Now'}</button></Link>\r\n                </div>\r\n                :\r\n                <div className=\"usersPost\">\r\n                    <h1>Your Writings</h1>\r\n                    {mappedPosts}\r\n                </div>\r\n            }\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {user_id: state.user_id}\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPosts);","import React from 'react'\r\n\r\n\r\nconst Comment = (props) => {\r\n    const {comment} = props.comment\r\n\r\n    return(\r\n        <div>\r\n            <p className = \"comment\">{comment}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport Comment from \"./Comment\"\r\nimport \"./Post.css\"\r\n\r\nclass Post extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            content: \"\",\r\n            comment: \"\",\r\n            comments: [],\r\n            add: false\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n        this.getUserPost()\r\n        this.getComments()\r\n    }\r\n\r\n    //# function for getting the content of the post\r\n    getUserPost = () => {\r\n        axios.get(\r\n            `/dash/posts/${this.props.match.params.post_id}`\r\n        )\r\n        .then (res => {\r\n            this.setState({\r\n                content: res.data[0].content\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    //# function for viewing all comments on a specific post\r\n    getComments = async () => {\r\n        try {\r\n            const res = await axios.get(`/api/comments/${this.props.match.params.post_id}`)\r\n            this.setState({\r\n                comments: res.data\r\n            })\r\n          } catch (err) {\r\n            console.log(err)\r\n          }\r\n      }    \r\n\r\n    //# function for adding comments\r\n    addComment = async (e) => {\r\n        e.preventDefault()\r\n        const {comment} = this.state\r\n        try {\r\n            await axios.post(`/api/comments/${this.props.match.params.post_id}`, {comment})\r\n            this.setState({\r\n                comment: \"\"\r\n            })\r\n            this.getComments()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    //# Switches between button and form\r\n    setAdd = () => {\r\n        this.setState({\r\n            add: !this.state.add\r\n        })\r\n    }\r\n\r\n    handleComment = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {setAdd} = this\r\n        const {comment, content, add} = this.state\r\n        const mappedComments = this.state.comments.map((comment) => (\r\n            <Comment\r\n                key = {comment.comment_id}\r\n                comment = {comment}\r\n            />\r\n        ))\r\n        return(\r\n            <div className='push'>\r\n            <div className = \"post\">\r\n                    <p className = \"content\">{content}</p>\r\n                    {add\r\n                        ?\r\n                        <form className = \"comment-form\">\r\n                            <input className = \"comment-input\"\r\n                                name = \"comment\"\r\n                                value = {comment}\r\n                                placeholder = \"Enter your comment\"\r\n                                onChange = {e => this.handleComment(e)}\r\n                            />\r\n                            <button className = \"comment-button\"\r\n                                onClick = {(e) => {\r\n                                    this.addComment(e)\r\n                                    setAdd()\r\n                                }}\r\n                                > \r\n                                Submit \r\n                            </button>\r\n                            <button className = \"comment-button\"\r\n                                onClick = {() => {\r\n                                    setAdd()\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </form>\r\n                        :\r\n                        <button className = \"comment-button\"\r\n                            onClick = {() => {\r\n                                setAdd()\r\n                            }}\r\n                        >\r\n                            Add Comment\r\n                        </button>\r\n                    }\r\n                    <ul className = \"comments\">\r\n                        {mappedComments}\r\n                    </ul>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state\r\nexport default connect(mapStateToProps)(Post)","import React, {useState} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport {useHistory, Link} from \"react-router-dom\"\r\nimport \"./CreatePost.css\"\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    const {user_id} = props\r\n    const [content, setContent] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n    const addPost = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await axios.post(\"/api/post\", {user_id, content})\r\n            history.push(\"/userposts\")\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='push'>\r\n            <form className = \"create-post\">\r\n                <textarea className = \"post-input\"\r\n                    name = \"content\"\r\n                    value = {content}\r\n                    placeholder = \"Enter your post\"\r\n                    onChange = {e => setContent(e.target.value)}\r\n                />\r\n                <Link\r\n                    className = \"submit\"\r\n                    onClick = {(e) => {\r\n                        addPost(e)\r\n                    }}\r\n                > \r\n                    Submit Post\r\n                </Link>\r\n            </form>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\nexport default connect(mapStateToProps)(CreatePost)","export default __webpack_public_path__ + \"static/media/copyicon.ed221b6c.png\";","export default __webpack_public_path__ + \"static/media/trashicon.f93e2efb.png\";","import './Edit.css';\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport copyicon from '../../media/copyicon.png';\r\nimport trashicon from '../../media/trashicon.png';\r\n\r\n// this component gets the post with id off the url\r\n// gets the comments to go with the post\r\n//displays the post and the comments\r\n// has delete, cancel, and add buttons as well as input boxes to edit the post.\r\nclass Edit extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            post: {},\r\n            comments: [],\r\n            input: \"\",\r\n            toggleDelete: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPost();\r\n        this.getComments();\r\n    }\r\n\r\n    //gets post\r\n    getPost = async () => {\r\n        //axios call to get post\r\n        const post = await axios.get(`/dash/posts/${this.props.match.params.post_id}`)\r\n        //set state post = to axios return\r\n        this.setState({\r\n            post: post.data[0],\r\n            input: post.data[0].content\r\n        })\r\n    }\r\n\r\n    getComments = async () => {\r\n        //axios call to get comments\r\n        const comments = await axios.get(`/api/comments/${this.props.match.params.post_id}`)\r\n        //set state comments to = axios return\r\n        this.setState({\r\n            comments: comments.data\r\n        })\r\n    }\r\n\r\n    // copies text from comment to clipboard\r\n    copyCodeToClipboard = () => {\r\n          /* Get the text field */\r\n            var copyText = document.getElementById(\"comment\");\r\n\r\n            /* Select the text field */\r\n            copyText.select();\r\n\r\n            /* Copy the text inside the text field */\r\n            document.execCommand(\"copy\");\r\n      }\r\n\r\n    //handles input change\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }        \r\n        \r\n        \r\n    // handles cancel button click. sets the input back to the original \r\n    handleCancel = () => {\r\n        this.setState({\r\n            input: this.state.post.content\r\n        })\r\n    }\r\n\r\n    // handles save button. updates the content of the post.\r\n    handleSave =  async () => {\r\n        const updatedPost = await axios.put(`/api/mypost/${this.state.post.post_id}`, {content: this.state.input})\r\n        this.setState({\r\n            post: updatedPost.data[0]\r\n        })\r\n        this.props.history.push('/userposts')\r\n    }\r\n\r\n    // handles delete button. deletes the post and all comments that go with it\r\n    //sends you back to my posts page\r\n    handleDelete = async () => {\r\n        await axios.delete(`/api/mypost/delete/${this.state.post.post_id}`);\r\n        this.props.history.push('/userposts');\r\n    }\r\n\r\n    handleCommentDelete = async (comment_id) => {\r\n        await axios.delete(`/api/comments/${comment_id}`)\r\n        this.getComments();\r\n    }\r\n\r\n    render(){\r\n        const mappedComments = this.state.comments.map((comment, index) => {\r\n            \r\n            return(\r\n                <div key={comment.comment_id} className=\"editComments\">\r\n                    <input name=\"\" className=\"comment\" id={`comment ${comment.comment_id}`} value={comment.comment} readOnly></input>\r\n                    <button className=\"copyButton\" onClick={() => {\r\n                        /* Get the text field */\r\n                        var copyText = document.getElementById(`comment ${comment.comment_id}`);\r\n                        /* Select the text field */\r\n                        copyText.select();\r\n\r\n                        /* Copy the text inside the text field */\r\n                        document.execCommand(\"copy\");\r\n                    }}><img alt=\"copy\" src={copyicon}/></button>\r\n\r\n                    <button className=\"copyButton\" onClick={() => this.handleCommentDelete(comment.comment_id)}><img alt=\"trash\" src={trashicon}/></button>\r\n                </div>\r\n            )\r\n        })\r\n        return(\r\n            <div className='push'>\r\n            <div className=\"Edit\">\r\n                <Link  to=\"/userposts\"><button className=\"backLink\">{'<-Back'}</button></Link>\r\n                <h1>Revise</h1>\r\n                <div>\r\n                    <textarea onChange={ e => this.changeHandler(e)} name=\"input\" type=\"text\" className=\"editContent\" value={this.state.input}></textarea>\r\n                </div>\r\n                <div className=\"editButtons\">\r\n                    <button onClick={() => this.setState({toggleDelete: true})}>Delete</button>\r\n                    <div>\r\n                        <button onClick={this.handleCancel}>Undo</button>\r\n                        <button onClick={this.handleSave}>Save</button>\r\n                    </div>\r\n                </div>\r\n                <div className={this.state.toggleDelete ? \"confirmBackground\" : \"hideConfirm\"}></div>\r\n                <div className={this.state.toggleDelete ? \"confirmDelete\" : \"hideConfirm\"}>\r\n                    <h5>Are you sure you want to delete? This cannot be undone</h5>\r\n                    <div className=\"confirmDeleteButtons\">\r\n                        <button onClick={() => this.setState({toggleDelete: false})}>Cancel</button>\r\n                        <button onClick={this.handleDelete}>Delete</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    {mappedComments}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {user_id: state.user_id}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Edit);","import axios from 'axios'\r\nimport React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './ForgotPassword.css'\r\nimport '../Auth/Login.css'\r\n\r\n\r\nclass ForgotPassword extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            toggle: false\r\n        }\r\n    }\r\n\r\n    handleEmail = (e) => {\r\n        this.setState({   email: e.target.value})\r\n    }\r\n\r\n    sendLink = async () => {\r\n        // send axios request passing email from state as body\r\n        await axios.post('/forgotpassword', {email: this.state.email});\r\n        this.setState({\r\n            toggle: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className = 'ForgotPassword'>\r\n                <div className='form passwordform'>\r\n                    <p className='passwordp'>{this.state.toggle? \"Email has been sent\" :\"An email will be sent to reset your password\"}</p>\r\n                    <input className='input' placeholder=\"Email\" onChange={this.handleEmail}></input>\r\n                    <button className='loginButton passwordbutton' onClick={this.sendLink}>Send Link</button>\r\n                </div>\r\n\r\n                <div className='space'>\r\n                    <img className='authLogo' alt='logo' src='https://cdn.discordapp.com/attachments/789196106965319750/794260091326824499/writersblocklogo.png'></img>\r\n                    <Link className='backToLogin' to='/'>Back to Login</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import axios from 'axios'\r\nimport React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Reset.css'\r\nimport '../Auth/Login.css'\r\n\r\n\r\nclass Reset extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            password: \"\",\r\n            newuser: {},\r\n            toggleLogin: true\r\n            \r\n        }\r\n    }\r\n\r\n    handlePassword = (e) => {\r\n        this.setState({   password: e.target.value})\r\n    }\r\n\r\n    resetPassword = async () => {\r\n        const updateduser = await axios.put(`/resetpassword/${this.props.match.params.resetid}`, {password: this.state.password});\r\n        console.log(updateduser);\r\n        this.setState({\r\n            newuser: updateduser.data[0],\r\n            toggleLogin: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className = 'ForgotPassword'>\r\n                <div className='form passwordform'>\r\n                    <p className='passwordp'>{this.state.toggleLogin ? \"Update Password\" : <Link className='backToLogin' to=\"/\">Return to Login</Link>}</p>\r\n                    <p className={this.state.toggleLogin ? 'hidePassText' : 'passwordp'}>{this.state.newuser ? \"Password has been updated\" : \"This Link is not valid.\"}</p>\r\n                    <input className={this.state.toggleLogin ? 'input' : \" hidePassText\"} placeholder=\"New Password\" onChange={this.handlePassword}></input>\r\n                    <button className={this.state.toggleLogin ? 'loginButton passwordbutton' : \"hidePassText\"} onClick={this.resetPassword}>Update</button>\r\n                </div>\r\n\r\n                <div className='space'>\r\n                    <img className='authLogo' alt='logo' src='https://cdn.discordapp.com/attachments/789196106965319750/794260091326824499/writersblocklogo.png'></img>\r\n                    <Link className='backToLogin' to='/'>Back to Login</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reset;","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport Register from \"./components/Auth/Register\"\r\nimport Login from './components/Auth/Login'\r\nimport Dash from './components/Dash/Dash'\r\nimport UserPosts from './components/UserPosts/UserPosts'\r\nimport Post from './components/Post/Post'\r\nimport CreatePost from './components/CreatePost/CreatePost'\r\nimport Edit from './components/Edit/Edit'\r\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword'\r\nimport Reset from './components/Reset/Reset'\r\n\r\n\r\nexport default (\r\n    <Switch>\r\n        <Route exact path='/' component = {Login}/>\r\n        <Route path='/register' component = {Register}/>\r\n        <Route path='/dash' component = {Dash}/>\r\n        <Route path='/userposts' component = {UserPosts}/>\r\n        <Route path='/post/:post_id' component = {Post}/>\r\n        <Route path='/createpost' component = {CreatePost} />\r\n        <Route path='/edit/:post_id' component = {Edit}/>\r\n        <Route path='/forgotpassword' component = {ForgotPassword}/>\r\n        <Route path='/reset/:resetid' component = {Reset}/>\r\n    </Switch>\r\n)","import React, {useEffect, useState} from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport {connect, useDispatch} from \"react-redux\"\r\nimport {logoutUser, getUser} from \"../../redux/reducer\"\r\nimport axios from \"axios\"\r\nimport { v4 as randomString } from 'uuid'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { GridLoader } from 'react-spinners'\r\nimport {NavDropdown } from 'react-bootstrap'\r\nimport \"./Header.css\"\r\n\r\nconst Header = (props) => {\r\n\r\n    const {user_id} = props\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [pic, setPic] = useState(\"\")\r\n    const [isUploading, setUploading] = useState(false)\r\n    const [show, setShow] = useState(false)\r\n    const [del, setDelete] = useState(false)\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await axios.post('/auth/logout')\r\n                dispatch(logoutUser())\r\n                history.push('/')\r\n                setShow(false)\r\n        } catch (err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const getMe = async () => {\r\n        try{\r\n            const res = await axios.get('/auth/me')\r\n            dispatch(getUser(+res.data.user_id))\r\n            setPic(res.data.profile_pic) \r\n        }catch(err){\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n    const getPic = async () => {\r\n        try {\r\n            const res = await axios.get(`/api/pic/${+user_id}`)\r\n            setPic(res.data)\r\n          } catch (err) {\r\n            console.log(err)\r\n          }\r\n      }\r\n\r\n    useEffect(() =>{\r\n        if(user_id){\r\n            getPic()    \r\n        }\r\n        getMe()\r\n    }, [getPic, user_id])\r\n\r\n    const getSignedReq = ([file]) => {\r\n        setUploading(true)\r\n        \r\n        const fileName = `${randomString()}-${file.name.replace(/\\s/g, '-')}`\r\n        axios.get('/api/signs3', {\r\n            params: {\r\n                'file-name': fileName,\r\n                'file-type': file.type\r\n            }\r\n        }).then(res => {\r\n            const {signedRequest, url} = res.data\r\n            uploadFile(file, signedRequest, url)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFile = (file, signedRequest, url) => {\r\n        const options = {\r\n            headers: {\r\n                'Content-Type': file.type\r\n            }\r\n        }\r\n            \r\n        deleteProfilePic()\r\n\r\n\r\n        axios.put(signedRequest, file, options).then(() => {\r\n            setPic(url)\r\n            axios.put(\"/api/user\", {user_id, url}).then((res) => {\r\n            })\r\n            setUploading(false)\r\n        }).catch(err => {\r\n            setUploading(false)\r\n            if (err.response.status === 403){\r\n                alert(`Your request for a signed URL failed with a status 403. Double check the CORS config and bucket policy in Matts repo.\\n${err.stack}`)\r\n            } else {\r\n                alert(`Error: ${err.status}\\n ${err.stack}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteProfilePic = () => {\r\n        try {\r\n            axios.post(\"/api/signs3\", {pic: pic})\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: \"image/*\",\r\n        multiple: false,\r\n        onDrop: (file) => {\r\n            getSignedReq(file)\r\n        }\r\n    })\r\n\r\n    const showDropdown = () => {\r\n        setShow(true)\r\n    }\r\n\r\n    const hideDropdown = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const deleteUser = async () => {\r\n        await axios.delete (`auth/delete`)\r\n        try {\r\n            dispatch(logoutUser())\r\n            setDelete(false)\r\n            history.push(\"/\")\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const showDelete = () => {\r\n        setDelete(true)\r\n    }\r\n\r\n    const cancelDelete = () => {\r\n        setDelete(false)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {user_id\r\n                ?\r\n                <div className = \"header\">\r\n                    <Link to='/dash'><img className='logo' alt='logo' src='https://cdn.discordapp.com/attachments/789196106965319750/794260091326824499/writersblocklogo.png'></img>\r\n                    </Link>\r\n                    <Link to = \"/createpost\"\r\n                        className = \"link\"\r\n                        id = \"createpost\"\r\n                    >\r\n                        Add Post\r\n                    </Link>\r\n                    <Link to = \"/userposts\"\r\n                        className = \"link\"\r\n                        id = \"userposts\"\r\n                    >\r\n                        Your Posts\r\n                    </Link>\r\n                    <Link to = \"/dash\"\r\n                        className = \"link\"\r\n                        id = \"dash\"\r\n                    >\r\n                        All Posts\r\n                    </Link>\r\n                    <div className='drop'>\r\n                    <NavDropdown title = {isUploading \r\n                        ? \r\n                            <GridLoader/> \r\n                        : \r\n                            \r\n                            <img className = \"profile-pic\" alt = \"profile-pic\" src = {`${pic}`}/>\r\n                        }  \r\n                            id=\"basic-nav-dropdown\" \r\n                            className = \"dropdown\"\r\n                            show={show}\r\n                            onMouseEnter={showDropdown} \r\n                            onMouseLeave={hideDropdown}\r\n                            >\r\n                            <div className = \"dropdown-menu\">\r\n                                <NavDropdown.Item>\r\n                                        <div className = \"update-button\">\r\n                                            <div {...getRootProps({className: \"drop-zone\"})}>\r\n                                                <input {...getInputProps()} />\r\n                                                <h3 className='h3'>Update Profile Picture</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                </NavDropdown.Item>\r\n                                <hr className='hrHeader'></hr>\r\n                                <NavDropdown.Item>\r\n                                    <Link to = \"/\"\r\n                                        className = \"dropdown-btn\"\r\n                                        id = \"logout\"\r\n                                        onClick = {logout}\r\n                                    >\r\n                                        Logout\r\n                                    </Link>\r\n                                </NavDropdown.Item>\r\n                                <hr className='hrHeader'></hr>\r\n                                <NavDropdown.Item>\r\n                                    <Link\r\n                                        className = \"dropdown-btn\"\r\n                                        id = \"delete\"\r\n                                        onClick = {showDelete}\r\n                                    >\r\n                                        Delete Account?\r\n                                    </Link>\r\n                                </NavDropdown.Item>\r\n                            </div>\r\n                    </NavDropdown>\r\n                        <div className = {del ? \"confirmBackground\" : \"hideConfirm\"}></div>\r\n                        <div className = {del ? \"confirmDelete\" : \"hideConfirm\"}>\r\n                            <h5>Are you sure you want to delete your account? This cannot be undone</h5>\r\n                            <div className=\"confirmDeleteButtons\">\r\n                                <button onClick = {cancelDelete} >Cancel</button>\r\n                                <button onClick = {deleteUser} >Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nexport default connect(mapStateToProps, {logoutUser, getUser})(Header)\r\n","import './App.css';\r\nimport routes from './routes'\r\nimport Header from \"./components/Header/Header\"\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      {routes}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createStore} from 'redux'\r\nimport reducer from './reducer'\r\n\r\nexport default createStore(reducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}